-- Langkah 1: Cipta Jadual "customers"
-- Jadual ini akan menyimpan semua maklumat berkaitan profil dan langganan pengguna.
CREATE TABLE public.customers (
  id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY, -- Kunci Primer unik untuk setiap rekod
  user_id uuid NOT NULL, -- ID dari jadual 'auth.users' Supabase, untuk dihubungkan
  email text NULL, -- Email pengguna
  subscription_plan text NULL, -- Pelan langganan ('6-bulan' atau '12-bulan')
  subscription_price numeric(10, 2) NULL, -- Harga yang dikenakan
  subscription_end_date date NULL, -- Tarikh tamat langganan
  is_promo_user boolean NULL, -- Menandakan jika pengguna dapat harga promosi
  payment_status text NULL DEFAULT 'pending'::text, -- Status pembayaran ('pending', 'paid')
  toyyibpay_bill_code text NULL, -- Kod bil dari ToyyibPay untuk rujukan
  created_at timestamptz NULL DEFAULT now(), -- Tarikh dan masa rekod dicipta
  
  CONSTRAINT customers_pkey PRIMARY KEY (id), -- Tetapkan 'id' sebagai Kunci Primer
  CONSTRAINT customers_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE -- Hubungkan 'user_id' ke jadual 'auth.users'
);

-- Memberi komen pada jadual untuk dokumentasi
COMMENT ON TABLE public.customers IS 'Menyimpan maklumat profil dan langganan pengguna.';
COMMENT ON COLUMN public.customers.user_id IS 'Sambungan ke jadual auth.users';


-- Langkah 2: Aktifkan Row-Level Security (RLS)
-- Ini adalah langkah keselamatan PENTING untuk memastikan pengguna hanya boleh akses data mereka sendiri.
ALTER TABLE public.customers ENABLE ROW LEVEL SECURITY;


-- Langkah 3: Cipta Polisi Keselamatan (RLS Policies)
-- Polisi ini mentakrifkan siapa yang boleh akses atau ubah data.

-- Polisi 1: Benarkan pengguna untuk LIHAT profil mereka sendiri sahaja.
CREATE POLICY "Users can view their own profile."
ON public.customers
FOR SELECT USING (auth.uid() = user_id);

-- Polisi 2: Benarkan pengguna untuk KEMAS KINI profil mereka sendiri.
CREATE POLICY "Users can update their own profile."
ON public.customers
FOR UPDATE USING (auth.uid() = user_id);

-- Nota: Polisi untuk INSERT (cipta rekod baru) tidak diperlukan untuk pengguna kerana
-- proses ini dikendalikan oleh server (menggunakan 'service_role key') yang mempunyai akses penuh.
